services:
  vaultwarden:
    image: ${IMAGE_VAULTWARDEN}
    container_name: ${VAULTWARDEN_CONTAINER_NAME}
    environment:
      DOMAIN: https://${HOST_PROXY_VAULTWARDEN}
      ADMIN_TOKEN: ${VAULTWARDEN_ADMIN_TOKEN}
    labels:
      traefik.http.routers.vaultwarden.entrypoints: http
      traefik.http.routers.vaultwarden.rule: Host(${REVERSE_PROXY_HOST_VAULTWARDEN})
      traefik.http.routers.vaultwarden.tls: false
      traefik.http.routers.vaultwarden.service: vaultwarden
      traefik.http.routers.vaultwarden.middlewares: vaultwarden-redirect-https
      traefik.http.services.vaultwarden.loadbalancer.server.port: 80
      traefik.http.middlewares.vaultwarden-redirect-https.redirectscheme.scheme: https
      # https
      traefik.http.routers.vaultwarden-secure.entrypoints: https
      traefik.http.routers.vaultwarden-secure.rule: Host(`${HOST_PROXY_VAULTWARDEN}`)
      traefik.http.routers.vaultwarden-secure.tls: true
      traefik.http.routers.vaultwarden-secure.service: vaultwarden-secure
      traefik.http.services.vaultwarden-secure.loadbalancer.server.port: 80
    networks:
      - ${HOMESERVER_NETWORK_REVERSE_PROXY}
    volumes:
      - ${VAULTWARDEN_VOLUME}:/data
